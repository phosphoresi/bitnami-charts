apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "jenkins.fullname" . }}
  labels:
    app: {{ template "jenkins.fullname" . }}
    chart: {{ include "jenkins.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "jenkins.fullname" . }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ template "jenkins.fullname" . }}
        chart: {{ include "jenkins.chart" . }}
        release: "{{ .Release.Name }}"
{{- if or .Values.podAnnotations .Values.metrics.enabled }}
      annotations:
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.metrics.podAnnotations }}
{{ toYaml .Values.metrics.podAnnotations | indent 8 }}
  {{- end }}
{{- end }}
    spec:
{{- include "jenkins.imagePullSecrets" . | indent 6 }}
      containers:
      - name: jenkins
        image: "{{ template "jenkins.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: JENKINS_USERNAME
          value: {{ .Values.jenkinsUser | quote }}
        - name: JENKINS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "jenkins.fullname" . }}
              key: jenkins-password
        - name: JENKINS_HOME
          value: {{ .Values.jenkinsHome | quote }}
        - name: DISABLE_JENKINS_INITIALIZATION
          value: {{ .Values.disableInitialization | quote }}
        {{- if .Values.javaOpts }}
        - name: JAVA_OPTS
          value: {{ .Values.javaOpts | quote }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: jenkins-data
          mountPath: /bitnami/jenkins
{{- if .Values.metrics.enabled }}
      - name: metrics
        image: {{ template "jenkins.metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        command: ['sh', '-c', 'python -u ./jenkins_exporter.py -j http://127.0.0.1:8080 --user $JENKINS_USERNAME --password $JENKINS_PASSWORD']
        env:
        - name: JENKINS_USERNAME
          value: {{ .Values.jenkinsUser | quote }}
        - name: JENKINS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "jenkins.fullname" . }}
              key: jenkins-password
        ports:
        - name: metrics
          containerPort: 9118
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
  {{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
      volumes:
      - name: jenkins-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "jenkins.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
